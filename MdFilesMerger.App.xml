<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MdFilesMerger.App</name>
    </assembly>
    <members>
        <member name="T:MdFilesMerger.App.Abstract.ICRUDService`1">
            <summary>
                Interface with base CRUD functionalities to serve stored private collection of <see
                cref="T:MdFilesMerger.Domain.Abstract.IItem"/> objects.
                <para>
                    <b> Inheritance: </b><see cref="T:MdFilesMerger.App.Abstract.IService`1"/> -&gt; ICRUDService&lt;T&gt; <br/><b>
                    Implementations: </b><see cref="T:MdFilesMerger.App.Common.BaseDirectoryService`1"/>, <see
                                     cref="T:MdFilesMerger.App.Common.BaseService`1"/>, <see
                                     cref="T:MdFilesMerger.App.Common.RelativeFileService`1"/>, <see
                                     cref="T:MdFilesMerger.App.Concrete.IgnoredFileService"/>, <see
                                     cref="T:MdFilesMerger.App.Concrete.MainDirectoryService"/>, <see
                                     cref="T:MdFilesMerger.App.Concrete.MergedFileService"/>, <see
                                     cref="T:MdFilesMerger.App.Concrete.SelectedFileService"/>, <see cref="T:MdFilesMerger.App.Concrete.UserService"/>
                </para>
            </summary>
            <typeparam name="T"> Type of handled entity. </typeparam>
            <seealso cref="T:MdFilesMerger.App.Abstract.IService`1"> MdFilesMerger.App.Abstract.IService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Common.BaseDirectoryService`1"> MdFilesMerger.App.Common.BaseDirectoryService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Common.BaseService`1"> MdFilesMerger.App.Common.BaseService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Common.RelativeFileService`1"> MdFilesMerger.App.Common.RelativeFileService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Concrete.IgnoredFileService"> MdFilesMerger.App.Concrete.IgnoredFileService </seealso>
            <seealso cref="T:MdFilesMerger.App.Concrete.MainDirectoryService"> MdFilesMerger.App.Concrete.MainDirectoryService </seealso>
            <seealso cref="T:MdFilesMerger.App.Concrete.MergedFileService"> MdFilesMerger.App.Concrete.MergedFileService </seealso>
            <seealso cref="T:MdFilesMerger.App.Concrete.SelectedFileService"> MdFilesMerger.App.Concrete.SelectedFileService </seealso>
            <seealso cref="T:MdFilesMerger.App.Concrete.UserService"> MdFilesMerger.App.Concrete.UserService </seealso>
            <seealso cref="T:MdFilesMerger.Domain.Abstract.IItem"> MdFilesMerger.Domain.Abstract.IItem </seealso>
        </member>
        <member name="M:MdFilesMerger.App.Abstract.ICRUDService`1.Create(`0)">
            <summary>
                Adds the item to the stored collection.
            </summary>
            <param name="item"> The item to add. </param>
            <returns>
                Identification number of added item. It can be:
                <list type="bullet">
                    <item>
                        <paramref name="item"/>.Id, if it is greater than <see langword="0"/> and
                        there was no equal element or element with the same id in the collection,
                    </item>
                    <item>
                        new identification number (one grater than max id value in the collection),
                        if there is no equal element in the collection, but there is already element
                        with this id or value of <paramref name="item"/>.Id is less equal <see langword="0"/>,
                    </item>
                    <item>
                        <see langword="-1"/>, if <paramref name="item"/> wasn't added to the
                        collection (for example <paramref name="item"/> was <see langword="null"/>
                        or there already is equal item in the collection).
                    </item>
                </list>
            </returns>
        </member>
        <member name="M:MdFilesMerger.App.Abstract.ICRUDService`1.CreateRange(System.Collections.Generic.List{`0})">
            <summary>
                Adds the range of items to the stored collection.
            </summary>
            <param name="items"> The list of items to add. </param>
            <returns>
                <list type="table">
                    <listheader>
                        Identification number of first item added to the stored collection.
                    </listheader>
                    <item>
                        Usually, it will be id of the first element of <paramref name="items"/>
                        after adding it to the stored collection.
                    </item>
                    <item>
                        If first element wasn't successfully added (for example it was <see
                        langword="null"/> or the collection already contains equal object), it will
                        be id of the first successfully added element.
                    </item>
                    <item>
                        Id value can change if element's original id is less equal <see
                        langword="0"/> or the stored collection already contains element with this
                        id value. In that case, new id value will be one grater than max id value in
                        the stored collection.
                    </item>
                    <item>
                        If no element was successfully added to the stored collection (for example
                        <paramref name="items"/> was empty or contained only <see langword="null"/>
                        values) method returns <see langword="-1"/>.
                    </item>
                </list>
            </returns>
        </member>
        <member name="M:MdFilesMerger.App.Abstract.ICRUDService`1.Delete(`0)">
            <summary>
                Deletes the specified item.
            </summary>
            <param name="item"> The item to delete. </param>
            <returns>
                Identification number of removed item or <see langword="-1"/>, if item wasn't
                removed, also if there is no element with id <paramref name="item"/>.Id in the
                stored collection.
            </returns>
        </member>
        <member name="M:MdFilesMerger.App.Abstract.ICRUDService`1.Delete(System.Int32)">
            <summary>
                Deletes the item with the specified identification number.
            </summary>
            <param name="id"> The identification number of the item to removed. </param>
            <returns>
                Identification number of removed item or <see langword="-1"/>, if item wasn't
                removed, also if there is no element with identification number <paramref
                name="id"/> in the stored collection.
            </returns>
        </member>
        <member name="M:MdFilesMerger.App.Abstract.ICRUDService`1.GetEqual(`0)">
            <summary>
                Gets element from collection that is equal to specified, according to appropriate
                <see cref="M:System.Object.Equals(System.Object)"/> override.
            </summary>
            <param name="item"> The item, whose counterpart is searched for in the collection. </param>
            <returns>
                <paramref name="item"/> counterpart from the collection, if found; otherwise <see langword="null"/>.
            </returns>
        </member>
        <member name="M:MdFilesMerger.App.Abstract.ICRUDService`1.GetNewId">
            <summary>
                Gets the identification number for new element.
            </summary>
            <returns>
                Returns number one greater then max Id in the stored collection, or <see
                langword="1"/>, if list is empty.
            </returns>
        </member>
        <member name="M:MdFilesMerger.App.Abstract.ICRUDService`1.IsEmpty">
            <summary>
                Determines whether the stored collection is empty.
            </summary>
            <returns> <see langword="true"/> if the list is empty; otherwise, <see langword="false"/>. </returns>
        </member>
        <member name="M:MdFilesMerger.App.Abstract.ICRUDService`1.ReadAll">
            <summary>
                Gets the whole stored collection.
            </summary>
            <returns> The stored collection as <see cref="T:System.Collections.Generic.List`1"/>. </returns>
        </member>
        <member name="M:MdFilesMerger.App.Abstract.ICRUDService`1.Update(`0)">
            <summary>
                Updates the specified item.
            </summary>
            <remarks>
                First method removes from the collection element with the same identification
                number. If removal succeeded, calls <see cref="M:MdFilesMerger.App.Abstract.ICRUDService`1.Create(`0)"> Create( <paramref
                name="item"/>) </see> method. If <paramref name="item"/> wasn't successfully added
                to the collection, previous object is restored.
            </remarks>
            <param name="item"> The updated item. </param>
            <returns>
                Identification number of updated item or <see langword="-1"/>, if there is no
                element with id <paramref name="item"/>.Id in the stored collection, old value
                wasn't successfully removed or there is already equal object in the collection.
            </returns>
        </member>
        <member name="T:MdFilesMerger.App.Abstract.IDirectoryService`1">
            <summary>
                Base interface to service collection of entities implementing <see cref="T:MdFilesMerger.Domain.Abstract.IDirectory"/> interface.
                <para>
                    <b> Inheritance: </b><see cref="T:MdFilesMerger.App.Abstract.IService`1"/> -&gt; <see cref="T:MdFilesMerger.App.Abstract.ICRUDService`1"/>
                    -&gt; IDirectoryService&lt;T&gt; <br/><b> Implementations: </b><see
                     cref="T:MdFilesMerger.App.Common.BaseDirectoryService`1"/>, <see
                     cref="T:MdFilesMerger.App.Common.RelativeFileService`1"/>, <see cref="T:MdFilesMerger.App.Concrete.IgnoredFileService"/>,
                     <see cref="T:MdFilesMerger.App.Concrete.MainDirectoryService"/>, <see
                     cref="T:MdFilesMerger.App.Concrete.MergedFileService"/>, <see cref="T:MdFilesMerger.App.Concrete.SelectedFileService"/>
                </para>
            </summary>
            <typeparam name="T"> Class implementing <see cref="T:MdFilesMerger.Domain.Abstract.IDirectory"/> interface. </typeparam>
            <seealso cref="T:MdFilesMerger.App.Abstract.ICRUDService`1"> MdFilesMerger.App.Abstract.ICRUDService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IService`1"> MdFilesMerger.App.Abstract.IService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Common.BaseDirectoryService`1"> MdFilesMerger.App.Common.BaseDirectoryService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Common.RelativeFileService`1"> MdFilesMerger.App.Common.RelativeFileService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Concrete.IgnoredFileService"> MdFilesMerger.App.Concrete.IgnoredFileService </seealso>
            <seealso cref="T:MdFilesMerger.App.Concrete.MainDirectoryService"> MdFilesMerger.App.Concrete.MainDirectoryService </seealso>
            <seealso cref="T:MdFilesMerger.App.Concrete.MergedFileService"> MdFilesMerger.App.Concrete.MergedFileService </seealso>
            <seealso cref="T:MdFilesMerger.App.Concrete.SelectedFileService"> MdFilesMerger.App.Concrete.SelectedFileService </seealso>
            <seealso cref="T:MdFilesMerger.Domain.Abstract.IDirectory"> MdFilesMerger.Domain.Abstract.IDirectory </seealso>
        </member>
        <member name="M:MdFilesMerger.App.Abstract.IDirectoryService`1.UpdatePath(System.Int32,System.String)">
            <summary>
                Updates the path of directory/file associated with the element with specified
                identification number.
            </summary>
            <param name="id"> The identification number of updated element. </param>
            <param name="path"> The new path. </param>
            <returns>
                Identification number of updated element or <see langword="-1"/>, if update failed.
            </returns>
        </member>
        <member name="T:MdFilesMerger.App.Abstract.IEditFileService`1">
            <summary>
                Interface with additional methods for handling collection of entities implementing <see
                cref="T:MdFilesMerger.Domain.Abstract.IEditFile"/> interface.
                <para>
                    <b> Inheritance: </b><see cref="T:MdFilesMerger.App.Abstract.IService`1"/> -&gt; <see cref="T:MdFilesMerger.App.Abstract.ICRUDService`1"/>
                    -&gt; <see cref="T:MdFilesMerger.App.Abstract.IDirectoryService`1"/> -&gt; IEditFileService&lt;T&gt; <br/><b>
                    Implementations: </b><see cref="T:MdFilesMerger.App.Concrete.MergedFileService"/>, <see cref="T:MdFilesMerger.App.Concrete.SelectedFileService"/>
                </para>
            </summary>
            <typeparam name="T"> Class implementing <see cref="T:MdFilesMerger.Domain.Abstract.IEditFile"/> interface. </typeparam>
            <seealso cref="T:MdFilesMerger.App.Abstract.ICRUDService`1"> MdFilesMerger.App.Abstract.ICRUDService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IDirectoryService`1"> MdFilesMerger.App.Abstract.IDirectoryService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IService`1"> MdFilesMerger.App.Abstract.IService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Concrete.MergedFileService"> MdFilesMerger.App.Concrete.MergedFileService </seealso>
            <seealso cref="T:MdFilesMerger.App.Concrete.SelectedFileService"> MdFilesMerger.App.Concrete.SelectedFileService </seealso>
            <seealso cref="T:MdFilesMerger.Domain.Abstract.IEditFile"> MdFilesMerger.Domain.Abstract.IEditFile </seealso>
        </member>
        <member name="M:MdFilesMerger.App.Abstract.IEditFileService`1.UpdateTitle(System.Int32,System.String)">
            <summary>
                Updates the title.
            </summary>
            <param name="id"> The identifier of object to update. </param>
            <param name="title"> The new title. </param>
            <returns>
                Identification number of updated item, or <see langword="-1"/>, if update failed
                (for example there are no item with specified id in the collection).
            </returns>
        </member>
        <member name="T:MdFilesMerger.App.Abstract.IMainDirectoryService">
            <summary>
                Interface to service collection of <see cref="T:MdFilesMerger.Domain.Entity.MainDirectory"/> objects.
                <para>
                    <b> Inheritance: </b><see cref="T:MdFilesMerger.App.Abstract.IService`1"/> -&gt; <see cref="T:MdFilesMerger.App.Abstract.ICRUDService`1"/>
                    -&gt; <see cref="T:MdFilesMerger.App.Abstract.IDirectoryService`1"/> -&gt; IMainDirectoryService <br/><b>
                    Implementations: </b><see cref="T:MdFilesMerger.App.Concrete.MainDirectoryService"/>
                </para>
            </summary>
            <seealso cref="T:MdFilesMerger.App.Abstract.ICRUDService`1"> MdFilesMerger.App.Abstract.ICRUDService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IDirectoryService`1"> MdFilesMerger.App.Abstract.IDirectoryService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IService`1"> MdFilesMerger.App.Abstract.IService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Concrete.MainDirectoryService"> MdFilesMerger.App.Concrete.MainDirectoryService </seealso>
            <seealso cref="T:MdFilesMerger.Domain.Entity.MainDirectory"> MdFilesMerger.Domain.Entity.MainDirectory </seealso>
        </member>
        <member name="M:MdFilesMerger.App.Abstract.IMainDirectoryService.FindAllFiles(System.Int32)">
            <summary>
                Finds all .md files in specified main directory and it's subdirectories.
            </summary>
            <param name="id">
                The identifier of <see cref="T:MdFilesMerger.Domain.Entity.MainDirectory"/> object associated with directory
                searched for .md files.
            </param>
            <returns> Collection of found .md files. </returns>
        </member>
        <member name="M:MdFilesMerger.App.Abstract.IMainDirectoryService.FindAllFiles(MdFilesMerger.Domain.Entity.MainDirectory)">
            <summary>
                Finds all .md files in specified main directory and it's subdirectories.
            </summary>
            <param name="mainDirectory">
                The <see cref="T:MdFilesMerger.Domain.Entity.MainDirectory"/> object associated with directory searched for .md files.
            </param>
            <returns> Collection of found .md files. </returns>
        </member>
        <member name="M:MdFilesMerger.App.Abstract.IMainDirectoryService.ReadByMergedFileId(System.Int32)">
            <summary>
                Gets, from the stored collection of <see cref="T:MdFilesMerger.Domain.Entity.MainDirectory"/> objects, elements
                with the specified merged file identifier.
            </summary>
            <param name="mergedFileId"> The searched merged file identifier. </param>
            <returns>
                The list of <see cref="T:MdFilesMerger.Domain.Entity.MainDirectory"/> objects with the specified merged file
                identifier. If there is no objects with <see cref="P:MdFilesMerger.Domain.Entity.MainDirectory.MergedFileId"/>
                equal <paramref name="mergedFileId"/>, returned list is empty.
            </returns>
        </member>
        <member name="T:MdFilesMerger.App.Abstract.IMenuActionService">
            <summary>
                Interface with functionalities to get menu actions.
                <para>
                    <b> Inheritance: </b><see cref="T:MdFilesMerger.App.Abstract.IService`1"/> -&gt; IMenuActionService <br/><b>
                    Implementation: </b><see cref="T:MdFilesMerger.App.Concrete.MenuActionService"/>
                </para>
            </summary>
            <seealso cref="T:MdFilesMerger.App.Abstract.IService`1"> MdFilesMerger.App.Abstract.IService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Concrete.MenuActionService"> MdFilesMerger.App.Concrete.MenuActionService </seealso>
        </member>
        <member name="M:MdFilesMerger.App.Abstract.IMenuActionService.ReadByMenuType(MdFilesMerger.Domain.Common.MenuType)">
            <summary>
                Gets elements from <see cref="F:MdFilesMerger.App.Concrete.MenuActionService._actions"/> with <see
                cref="P:MdFilesMerger.Domain.Entity.MenuAction.Menu"/><paramref name="menuType"/>.
            </summary>
            <param name="menuType"> Type of the menu. </param>
            <returns> List with object of menu <paramref name="menuType"/>. </returns>
        </member>
        <member name="T:MdFilesMerger.App.Abstract.IMergedFileService">
            <summary>
                Interface with methods for handling collection of <see cref="T:MdFilesMerger.Domain.Entity.MergedFile"/> objects.
                <para>
                    <b> Inheritance: </b><see cref="T:MdFilesMerger.App.Abstract.IService`1"/> -&gt; <see cref="T:MdFilesMerger.App.Abstract.ICRUDService`1"/>
                    -&gt; <see cref="T:MdFilesMerger.App.Abstract.IDirectoryService`1"/> -&gt; <see cref="T:MdFilesMerger.App.Abstract.IEditFileService`1"/>
                    -&gt; IMergedFileService <br/><b>
                    Implementations: </b><see cref="T:MdFilesMerger.App.Concrete.MergedFileService"/>
                </para>
            </summary>
            <seealso cref="T:MdFilesMerger.App.Abstract.ICRUDService`1"> MdFilesMerger.App.Abstract.ICRUDService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IDirectoryService`1"> MdFilesMerger.App.Abstract.IDirectoryService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IEditFileService`1"> MdFilesMerger.App.Abstract.IEditFileService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IService`1"> MdFilesMerger.App.Abstract.IService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Concrete.MergedFileService"> MdFilesMerger.App.Concrete.MergedFileService </seealso>
            <seealso cref="T:MdFilesMerger.Domain.Entity.MergedFile"> MdFilesMerger.Domain.Concrete.MergedFile </seealso>
        </member>
        <member name="M:MdFilesMerger.App.Abstract.IMergedFileService.CreateFile(MdFilesMerger.Domain.Entity.MergedFile,System.Collections.Generic.List{MdFilesMerger.Domain.Entity.SelectedFile})">
            <summary>
                Creates the file associated with specified <see cref="T:MdFilesMerger.Domain.Entity.MergedFile"/> object.
            </summary>
            <remarks>
                If the file already exists, it is deleted. New file is created and fill with
                specified header and table of contents.
            </remarks>
            <param name="mergedFile"> The merged file to create. </param>
            <param name="selectedFiles">
                The list of all selected files that will be merged into the merged file. It is used
                to create table of contents.
            </param>
            <returns>
                <see cref="T:System.IO.FileInfo"/> of created file or <see langword="null"/> if no file was
                specified, or specified file couldn't be created.
            </returns>
        </member>
        <member name="M:MdFilesMerger.App.Abstract.IMergedFileService.ReadByUserId(System.Int32)">
            <summary>
                Gets, from the stored collection of <see cref="T:MdFilesMerger.Domain.Entity.MergedFile"/> objects, elements with
                the specified user identifier.
            </summary>
            <param name="userId"> The searched user identifier. </param>
            <returns>
                The list of <see cref="T:MdFilesMerger.Domain.Entity.MergedFile"/> objects with the specified user identifier. If
                there is no objects with <see cref="P:MdFilesMerger.Domain.Entity.MergedFile.UserId"/> equal <paramref
                name="userId"/>, returned list is empty.
            </returns>
        </member>
        <member name="M:MdFilesMerger.App.Abstract.IMergedFileService.UpdateFileName(System.Int32,System.String)">
            <summary>
                Updates the name of the file associated with specified object.
            </summary>
            <param name="id"> The identifier of merged file to update. </param>
            <param name="fileName">
                New name of the associated .md file. It doesn't have to include extension.
            </param>
            <returns>
                The identifier of updated object or <see langword="-1"/>, if there is no <see
                cref="T:MdFilesMerger.Domain.Entity.MergedFile"/> with specified id in the stored collection or <paramref
                name="fileName"/> is not a valid file name.
            </returns>
        </member>
        <member name="M:MdFilesMerger.App.Abstract.IMergedFileService.UpdateNewLineStyle(System.Int32,System.String)">
            <summary>
                Updates the new line style that will be used in specified merged file.
            </summary>
            <param name="id"> The identifier of merged file to update. </param>
            <param name="newLineStyle"> The new new line style. </param>
            <returns>
                The identifier of updated object or <see langword="-1"/>, if there is no <see
                cref="T:MdFilesMerger.Domain.Entity.MergedFile"/> with specified id in the stored collection.
            </returns>
        </member>
        <member name="M:MdFilesMerger.App.Abstract.IMergedFileService.UpdateParentDirectory(System.Int32,System.String)">
            <summary>
                Updates the parent directory of the file associated with specified object.
            </summary>
            <param name="id"> The identifier of merged file to update. </param>
            <param name="directoryPath"> The new directory path. </param>
            <returns>
                The identifier of updated object or <see langword="-1"/>, if there is no <see
                cref="T:MdFilesMerger.Domain.Entity.MergedFile"/> with specified id in the stored collection or <paramref
                name="directoryPath"/> is not a valid path.
            </returns>
        </member>
        <member name="M:MdFilesMerger.App.Abstract.IMergedFileService.UpdateTableOfContents(System.Int32,MdFilesMerger.Domain.Common.TableOfContents)">
            <summary>
                Updates the type of table of contents for specified merged file.
            </summary>
            <param name="id"> The identifier of merged file to update. </param>
            <param name="tableOfContents"> The new type of table of contents. </param>
            <returns>
                The identifier of updated object or <see langword="-1"/>, if there is no <see
                cref="T:MdFilesMerger.Domain.Entity.MergedFile"/> with specified id in the stored collection.
            </returns>
        </member>
        <member name="M:MdFilesMerger.App.Abstract.IMergedFileService.UpdateTOCHeader(System.Int32,System.String)">
            <summary>
                Updates the header of table of contents for specified merged file.
            </summary>
            <param name="id"> The identifier of merged file to update. </param>
            <param name="header"> The new header. </param>
            <returns>
                The identifier of updated object or <see langword="-1"/>, if there is no <see
                cref="T:MdFilesMerger.Domain.Entity.MergedFile"/> with specified id in the stored collection.
            </returns>
        </member>
        <member name="T:MdFilesMerger.App.Abstract.IRelativeFileService`1">
            <summary>
                Interface with additional methods for handling collection of objects associated with .md
                files, whose paths are stored as relative to connected main directory path.
                <para>
                    <b> Inheritance: </b><see cref="T:MdFilesMerger.App.Abstract.IService`1"/> -&gt; <see cref="T:MdFilesMerger.App.Abstract.ICRUDService`1"/>
                    -&gt; <see cref="T:MdFilesMerger.App.Abstract.IDirectoryService`1"/> -&gt; IRelativeFileService&lt;T&gt;
                     <br/><b> Implementations: </b><see cref="T:MdFilesMerger.App.Common.RelativeFileService`1"/>, <see
                     cref="T:MdFilesMerger.App.Concrete.IgnoredFileService"/>, <see cref="T:MdFilesMerger.App.Concrete.SelectedFileService"/>
                </para>
            </summary>
            <typeparam name="T"> Type implementing <see cref="T:MdFilesMerger.Domain.Abstract.IRelativeFile"/> interface. </typeparam>
            <seealso cref="T:MdFilesMerger.App.Abstract.ICRUDService`1"> MdFilesMerger.App.Abstract.ICRUDService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IDirectoryService`1"> MdFilesMerger.App.Abstract.IDirectoryService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IService`1"> MdFilesMerger.App.Abstract.IService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Common.RelativeFileService`1"> MdFilesMerger.App.Common.RelativeFileService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Concrete.IgnoredFileService"> MdFilesMerger.App.Concrete.IgnoredFileService </seealso>
            <seealso cref="T:MdFilesMerger.App.Concrete.SelectedFileService"> MdFilesMerger.App.Concrete.SelectedFileService </seealso>
            <seealso cref="T:MdFilesMerger.Domain.Abstract.IRelativeFile"> MdFilesMerger.Domain.Abstract.IRaletiveFile </seealso>
        </member>
        <member name="M:MdFilesMerger.App.Abstract.IRelativeFileService`1.FindNewFiles(System.Collections.Generic.IEnumerable{System.IO.FileInfo},MdFilesMerger.Domain.Entity.MainDirectory)">
            <summary>
                In the list of files connected with specified main directory, finds files, that
                aren't associated with any element in the stored collection.
            </summary>
            <param name="list"> The list of files. </param>
            <param name="mainDirectory"> The main directory for files on the list. </param>
            <returns> List of files not associated with any element in the stored collection. </returns>
        </member>
        <member name="M:MdFilesMerger.App.Abstract.IRelativeFileService`1.GetFullPath(System.Int32)">
            <summary>
                Gets the full path of file associated with specified object.
            </summary>
            <param name="id"> The identifier of object. </param>
            <returns> Absolute path of file associated with specified object. </returns>
        </member>
        <member name="M:MdFilesMerger.App.Abstract.IRelativeFileService`1.GetFullPath(`0)">
            <summary>
                Gets the full path of file associated with specified object.
            </summary>
            <param name="relativeFile"> The specified object. </param>
            <returns> Absolute path of file associated with specified object. </returns>
        </member>
        <member name="M:MdFilesMerger.App.Abstract.IRelativeFileService`1.ReadByMainDirId(System.Int32)">
            <summary>
                Gets, from the stored collection of <typeparamref name="T"/> objects, elements with
                the specified main directory identifier.
            </summary>
            <param name="mainDirId"> The searched main directory identifier. </param>
            <returns>
                The list of <typeparamref name="T"/> objects with the specified main directory
                identifier. If there is no objects with <see cref="P:MdFilesMerger.Domain.Abstract.IRelativeFile.MainDirId"/> equal
                <paramref name="mainDirId"/>, returned list is empty.
            </returns>
        </member>
        <member name="T:MdFilesMerger.App.Abstract.ISelectedFileService">
            <summary>
                Interface with methods for handling collection of selected file objects.
                <para>
                    <b> Inheritance: </b><see cref="T:MdFilesMerger.App.Abstract.IService`1"/> -&gt; <see cref="T:MdFilesMerger.App.Abstract.ICRUDService`1"/>
                    -&gt; <see cref="T:MdFilesMerger.App.Abstract.IDirectoryService`1"/> -&gt; <see cref="T:MdFilesMerger.App.Abstract.IRelativeFileService`1"/>
                    -&gt; ISelectedFileService <br/><see cref="T:MdFilesMerger.App.Abstract.IService`1"/> -&gt; <see cref="T:MdFilesMerger.App.Abstract.ICRUDService`1"/>
                    -&gt; <see cref="T:MdFilesMerger.App.Abstract.IDirectoryService`1"/> -&gt; <see cref="T:MdFilesMerger.App.Abstract.IEditFileService`1"/>
                    -&gt; ISelectedFileService <br/><b> Implementations: </b><see cref="T:MdFilesMerger.App.Concrete.SelectedFileService"/>
                </para>
            </summary>
            <seealso cref="T:MdFilesMerger.App.Abstract.ICRUDService`1"> MdFilesMerger.App.Abstract.ICRUDService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IDirectoryService`1"> MdFilesMerger.App.Abstract.IDirectoryService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IEditFileService`1"> MdFilesMerger.App.Abstract.IEditFileService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IRelativeFileService`1"> MdFilesMerger.App.Abstract.IRelativeFileService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IService`1"> MdFilesMerger.App.Abstract.IService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Concrete.SelectedFileService"> MdFilesMerger.App.Concrete.SelectedFileService </seealso>
            <seealso cref="T:MdFilesMerger.Domain.Entity.SelectedFile"> MdFilesMerger.Domain.Entity.SelectedFile </seealso>
        </member>
        <member name="M:MdFilesMerger.App.Abstract.ISelectedFileService.AppendFile(System.Int32,System.IO.FileInfo,System.String)">
            <summary>
                Appends the content of the specified file to the destination file.
            </summary>
            <param name="id"> The identifier of object associated with the file to append. </param>
            <param name="destinationFile">
                The destination file, to which the content of the file will be appended.
            </param>
            <param name="newLine"> The new line style, used in destination file. </param>
        </member>
        <member name="M:MdFilesMerger.App.Abstract.ISelectedFileService.AppendFile(MdFilesMerger.Domain.Entity.SelectedFile,System.IO.FileInfo,System.String)">
            <summary>
                Appends the content of the specified file to the destination file.
            </summary>
            <param name="appendedFile"> The object associated with the file to append. </param>
            <param name="destinationFile">
                The destination file, to which the content of the file will be appended.
            </param>
            <param name="newLine"> The new line style, used in destination file. </param>
        </member>
        <member name="M:MdFilesMerger.App.Abstract.ISelectedFileService.CreateRange(System.Collections.Generic.IEnumerable{System.IO.FileInfo},MdFilesMerger.Domain.Entity.MainDirectory)">
            <summary>
                Creates new objects associated with specified files and main directory and adds them
                to the stored collection.
            </summary>
            <param name="list">
                The collection of files that will be associated with added objects.
            </param>
            <param name="mainDirectory">
                The main directory that all created objects will be connected with.
            </param>
            <returns>
                <list type="table">
                    <listheader>
                        Identification number of first object added to the stored collection.
                    </listheader>
                    <item>
                        Usually, it will be id of the created object associated with the first file
                        from the <paramref name="list"/> after adding it to the stored collection.
                    </item>
                    <item>
                        If that object wasn't successfully added (for example associated path wasn't
                        valid or lead to non existing or unaccessible file, object was <see
                        langword="null"/> or the collection already contains equal object), it will
                        be id of the first successfully added object.
                    </item>
                    <item>
                        Added object's id value will be one grater than max id value in the stored collection.
                    </item>
                    <item>
                        If no object was successfully added to the stored collection (for example
                        <paramref name="list"/> was empty or contained only <see langword="null"/>
                        values) method returns <see langword="-1"/>.
                    </item>
                </list>
            </returns>
        </member>
        <member name="T:MdFilesMerger.App.Abstract.IService`1">
            <summary>
                Base interface for all services in <see cref="N:MdFilesMerger.App"/> project.
                <para>
                    <b> Inheritance: </b> IService&lt;T&gt; <br/><b> Implementations: </b><see
                    cref="T:MdFilesMerger.App.Common.BaseDirectoryService`1"/>, <see cref="T:MdFilesMerger.App.Common.BaseService`1"/>, <see
                    cref="T:MdFilesMerger.App.Common.RelativeFileService`1"/>, <see cref="T:MdFilesMerger.App.Concrete.IgnoredFileService"/>,
                    <see cref="T:MdFilesMerger.App.Concrete.MainDirectoryService"/>, <see
                    cref="T:MdFilesMerger.App.Concrete.MenuActionService"/>, <see cref="T:MdFilesMerger.App.Concrete.MergedFileService"/>, <see
                    cref="T:MdFilesMerger.App.Concrete.SelectedFileService"/>, <see cref="T:MdFilesMerger.App.Concrete.UserService"/>
                </para>
            </summary>
            <typeparam name="T"> Type of stored and serviced objects. </typeparam>
            <seealso cref="T:MdFilesMerger.App.Common.BaseDirectoryService`1"> MdFilesMerger.App.Common.BaseDirectoryService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Common.BaseService`1"> MdFilesMerger.App.Common.BaseService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Common.RelativeFileService`1"> MdFilesMerger.App.Common.RelativeFileService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Concrete.IgnoredFileService"> MdFilesMerger.App.Concrete.IgnoredFileService </seealso>
            <seealso cref="T:MdFilesMerger.App.Concrete.MainDirectoryService"> MdFilesMerger.App.Concrete.MainDirectoryService </seealso>
            <seealso cref="T:MdFilesMerger.App.Concrete.MenuActionService"> MdFilesMerger.App.Concrete.MenuActionService </seealso>
            <seealso cref="T:MdFilesMerger.App.Concrete.MergedFileService"> MdFilesMerger.App.Concrete.MergedFileService </seealso>
            <seealso cref="T:MdFilesMerger.App.Concrete.SelectedFileService"> MdFilesMerger.App.Concrete.SelectedFileService </seealso>
            <seealso cref="T:MdFilesMerger.App.Concrete.UserService"> MdFilesMerger.App.Concrete.UserService </seealso>
            <seealso cref="T:MdFilesMerger.Domain.Abstract.IItem"> MdFilesMerger.Domain.Abstract.IItem </seealso>
        </member>
        <member name="M:MdFilesMerger.App.Abstract.IService`1.ReadById(System.Int32)">
            <summary>
                Gets stored <typeparamref name="T"/> object by it's identification number.
            </summary>
            <param name="id"> Identification number of searched object. </param>
            <returns>
                Found <typeparamref name="T"/> object, or <see langword="null"/>, if no object was found.
            </returns>
        </member>
        <member name="T:MdFilesMerger.App.Abstract.IUserService">
            <summary>
                Defines methods to service <see cref="T:MdFilesMerger.Domain.Entity.User"/> objects collection.
                <para>
                    <b> Inheritance: </b><see cref="T:MdFilesMerger.App.Abstract.IService`1"/> -&gt; <see cref="T:MdFilesMerger.App.Abstract.ICRUDService`1"/>
                    -&gt; IUserService <br/><b> Implementations: </b><see cref="T:MdFilesMerger.App.Concrete.UserService"/>
                </para>
            </summary>
            <seealso cref="T:MdFilesMerger.App.Abstract.ICRUDService`1"> MdFilesMerger.App.Abstract.ICRUDService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IService`1"> MdFilesMerger.App.Abstract.IService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Concrete.UserService"> MdFilesMerger.App.Concrete.UserService </seealso>
            <seealso cref="T:MdFilesMerger.Domain.Entity.User"> MdFilesMerger.Domain.Entity.User </seealso>
        </member>
        <member name="M:MdFilesMerger.App.Abstract.IUserService.CheckCredentials(System.String,System.String)">
            <summary>
                Check the credentials.
            </summary>
            <param name="userName"> Name of the user. </param>
            <param name="password"> The password. </param>
            <returns>
                Identification number of user with specified name if it is in the collection and
                specified password is correct; otherwise <see langword="-1"/>.
            </returns>
        </member>
        <member name="M:MdFilesMerger.App.Abstract.IUserService.ReadByName(System.String)">
            <summary>
                From stored collection of <see cref="T:MdFilesMerger.Domain.Entity.User"/> objects, gets user with specified name.
            </summary>
            <param name="name"> The name of user that you are looking for. </param>
            <returns>
                <see cref="T:MdFilesMerger.Domain.Entity.User"/> object with <see cref="P:MdFilesMerger.Domain.Common.BaseItem.Name"/> equal
                <paramref name="name"/>. If there is no element with specified name in stored
                collection, method returns <see langword="null"/>.
            </returns>
        </member>
        <member name="M:MdFilesMerger.App.Abstract.IUserService.UpdateName(System.Int32,System.String)">
            <summary>
                Updates the name of user with specified identification number.
            </summary>
            <param name="id"> The identification number of updated user. </param>
            <param name="name"> The new name of the user. </param>
            <returns>
                Id of updated user, unless:
                <list type="bullet">
                    <item>
                        name is <see langword="null"/>, <see cref="F:System.String.Empty"/> or consists only
                        from white-spaces characters,
                    </item>
                    <item>
                        in the collection, there is no user with specified id, or user with
                        specified name already exists,
                    </item>
                </list>
                then <see langword="-1"/>.
            </returns>
        </member>
        <member name="M:MdFilesMerger.App.Abstract.IUserService.UpdatePassword(System.Int32,System.String)">
            <summary>
                Updates the password of user with specified identification number.
            </summary>
            <param name="id"> The identification number of updated user. </param>
            <param name="password"> The new password of the user. </param>
            <returns>
                Id of updated user, unless, in the collection, there is no user with specified id,
                or specified password is <see langword="null"/>, <see cref="F:System.String.Empty"/> or
                consists only from white-spaces characters.
            </returns>
        </member>
        <member name="T:MdFilesMerger.App.Common.BaseDirectoryService`1">
            <summary>
                Base implementation of <see cref="T:MdFilesMerger.App.Abstract.IDirectoryService`1"/> for <see cref="T:MdFilesMerger.Domain.Abstract.IDirectory"/> objects.
                <para>
                    <b> Inheritance: </b><see cref="T:MdFilesMerger.App.Common.BaseService`1"/> -&gt;
                    BaseDirectoryService&lt;T&gt; <br/><b> Implements: </b><see
                    cref="T:MdFilesMerger.App.Abstract.ICRUDService`1"/>, <see cref="T:MdFilesMerger.App.Abstract.IDirectoryService`1"/>, <see cref="T:MdFilesMerger.App.Abstract.IService`1"/>
                </para>
            </summary>
            <typeparam name="T"> </typeparam>
            <seealso cref="T:MdFilesMerger.App.Abstract.ICRUDService`1"> MdFilesMerger.App.Abstract.ICRUDService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IDirectoryService`1"> MdFilesMerger.App.Abstract.IDirectoryService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IService`1"> MdFilesMerger.App.Abstract.IService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Common.BaseService`1"> MdFilesMerger.App.Common.BaseService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.Domain.Abstract.IDirectory"> MdFilesMerger.Domain.Common.BaseDirectory </seealso>
        </member>
        <member name="M:MdFilesMerger.App.Common.BaseDirectoryService`1.UpdatePath(System.Int32,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:MdFilesMerger.App.Common.BaseService`1">
            <summary>
                Base CRUD service implementation.
                <para>
                    <b> Inheritance: </b> BaseService&lt;T&gt; <br/><b>
                    Implements: <see cref="T:MdFilesMerger.App.Abstract.ICRUDService`1"/>, </b><see cref="T:MdFilesMerger.App.Abstract.IService`1"/>
                </para>
            </summary>
            <typeparam name="T"> Type of handled entity. </typeparam>
            <seealso cref="T:MdFilesMerger.Domain.Abstract.IItem"> MdFilesMerger.Domain.Abstract.IItem </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IService`1"> MdFilesMerger.App.Abstract.IService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.ICRUDService`1"> MdFilesMerger.App.Abstract.ICRUDService&lt;T&gt; </seealso>
        </member>
        <member name="F:MdFilesMerger.App.Common.BaseService`1._items">
            <summary>
                The stored collection of <typeparamref name="T"/> objects, that will be managed by
                this class.
            </summary>
        </member>
        <member name="M:MdFilesMerger.App.Common.BaseService`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:MdFilesMerger.App.Common.BaseService`1"/> class and it's <see
                cref="F:MdFilesMerger.App.Common.BaseService`1._items"/> field.
            </summary>
        </member>
        <member name="M:MdFilesMerger.App.Common.BaseService`1.Create(`0)">
            <inheritdoc/>
        </member>
        <member name="M:MdFilesMerger.App.Common.BaseService`1.CreateRange(System.Collections.Generic.List{`0})">
            <inheritdoc/>
        </member>
        <member name="M:MdFilesMerger.App.Common.BaseService`1.Delete(`0)">
            <inheritdoc/>
        </member>
        <member name="M:MdFilesMerger.App.Common.BaseService`1.Delete(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:MdFilesMerger.App.Common.BaseService`1.GetEqual(`0)">
            <inheritdoc/>
        </member>
        <member name="M:MdFilesMerger.App.Common.BaseService`1.GetNewId">
            <inheritdoc/>
        </member>
        <member name="M:MdFilesMerger.App.Common.BaseService`1.IsEmpty">
            <inheritdoc/>
        </member>
        <member name="M:MdFilesMerger.App.Common.BaseService`1.ReadAll">
            <inheritdoc/>
        </member>
        <member name="M:MdFilesMerger.App.Common.BaseService`1.ReadById(System.Int32)">
            <summary>
                Gets stored <typeparamref name="T"/> object by it's identification number.
            </summary>
            <param name="id"> Identification number of searched object. </param>
            <returns>
                Found <typeparamref name="T"/> object, or <see langword="null"/>, if no object was found.
            </returns>
        </member>
        <member name="M:MdFilesMerger.App.Common.BaseService`1.Update(`0)">
            <inheritdoc/>
        </member>
        <member name="T:MdFilesMerger.App.Common.Hyperlinks">
            <summary>
                Static class containing methods for hyperlinks management.
            </summary>
        </member>
        <member name="M:MdFilesMerger.App.Common.Hyperlinks.ContainsHyperlink(System.String)">
            <summary>
                Determines whether the specified text contains hyperlink.
            </summary>
            <param name="text"> The text. </param>
            <returns>
                <see langword="true"/> if the specified text contains hyperlink; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:MdFilesMerger.App.Common.Hyperlinks.GetLink(System.String)">
            <summary>
                Gets the link part of the first hyperlink (underlying destination, where link points
                and directs to after clicking).
            </summary>
            <param name="hyperlink"> The text containing hyperlink. </param>
            <returns>
                String with the link, if passed value contained hyperlink; otherwise <see cref="F:System.String.Empty"/>.
            </returns>
        </member>
        <member name="M:MdFilesMerger.App.Common.Hyperlinks.GetText(System.String)">
            <summary>
                Gets the text part of the first hyperlink (text that will be displayed as link).
            </summary>
            <param name="hyperlink"> The text containing hyperlink. </param>
            <returns>
                String with the link description (visible text), if passed value contained
                hyperlink; otherwise <see cref="F:System.String.Empty"/>.
            </returns>
        </member>
        <member name="M:MdFilesMerger.App.Common.Hyperlinks.HyperlinkToText(System.String)">
            <summary>
                Converts the text containing hyperlink to the plain text.
            </summary>
            <remarks>
                The first hyperlink in the given text is replaced by its text part. The rest of the
                passed text stays the same.
            </remarks>
            <param name="hyperlinkHeader"> The text containing hyperlink. For example header. </param>
            <returns> The passed text with it's first hyperlink converted. </returns>
        </member>
        <member name="M:MdFilesMerger.App.Common.Hyperlinks.TextToHyperlink(System.String)">
            <summary>
                Converts text to Markdown hyperlink leading to appropriate section of the file that
                it will be placed in.
            </summary>
            <remarks>
                The specified text is treated as text part of Markdown hyperlink. If text is a
                Markdown style header the leading '#' characters are previously removed. The text is
                also trimmed. Link leads to appropriate section of the file (that it will be place
                in). Name of the section is the same as the text.
            </remarks>
            <param name="text"> The text to convert. </param>
            <returns> Prepared hyperlink. </returns>
        </member>
        <member name="T:MdFilesMerger.App.Common.RelativeFileService`1">
            <summary>
                Implementation of additional methods for handling collection of objects associated with
                .md files, whose paths are stored as relative to connected main directory path.
                <para>
                    <b> Inheritance: </b><see cref="T:MdFilesMerger.App.Common.BaseService`1"/> -&gt; <see cref="T:MdFilesMerger.App.Common.BaseDirectoryService`1"/>
                    -&gt; RelativeFileService&lt;T&gt; <br/><b> Implements: </b><see
                     cref="T:MdFilesMerger.App.Abstract.ICRUDService`1"/>, <see cref="T:MdFilesMerger.App.Abstract.IDirectoryService`1"/>, <see
                     cref="T:MdFilesMerger.App.Abstract.IRelativeFileService`1"/>, <see cref="T:MdFilesMerger.App.Abstract.IService`1"/>
                </para>
            </summary>
            <typeparam name="T"> <see cref="T:MdFilesMerger.Domain.Common.RelativeFile"/> or type derived from it. </typeparam>
            <seealso cref="T:MdFilesMerger.App.Abstract.ICRUDService`1"> MdFilesMerger.App.Abstract.ICRUDService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IDirectoryService`1"> MdFilesMerger.App.Abstract.IDirectoryService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IRelativeFileService`1"> MdFilesMerger.App.Abstract.IRelativeFileService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IService`1"> MdFilesMerger.App.Abstract.IService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Common.BaseDirectoryService`1"> MdFilesMerger.App.Common.BaseDirectoryService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Common.BaseService`1"> MdFilesMerger.App.Common.BaseService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.Domain.Common.RelativeFile"> MdFilesMerger.Domain.Common.RelativeFile </seealso>
        </member>
        <member name="F:MdFilesMerger.App.Common.RelativeFileService`1._mainDirService">
            <summary>
                The main directory service.
            </summary>
        </member>
        <member name="M:MdFilesMerger.App.Common.RelativeFileService`1.#ctor(MdFilesMerger.App.Concrete.MainDirectoryService)">
            <summary>
                Initializes a new instance of the <see cref="T:MdFilesMerger.App.Common.RelativeFileService`1"/> class.
            </summary>
            <param name="mainDirService"> The main directory service. </param>
        </member>
        <member name="M:MdFilesMerger.App.Common.RelativeFileService`1.FindNewFiles(System.Collections.Generic.IEnumerable{System.IO.FileInfo},MdFilesMerger.Domain.Entity.MainDirectory)">
            <inheritdoc/>
        </member>
        <member name="M:MdFilesMerger.App.Common.RelativeFileService`1.GetFullPath(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:MdFilesMerger.App.Common.RelativeFileService`1.GetFullPath(`0)">
            <inheritdoc/>
        </member>
        <member name="M:MdFilesMerger.App.Common.RelativeFileService`1.ReadByMainDirId(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:MdFilesMerger.App.Common.RelativeFileService`1.UpdatePath(System.Int32,System.String)">
            <summary>
                Updates the relative path of .md file associated with the element with specified
                identification number.
            </summary>
            <param name="id"> The identification number of updated element. </param>
            <param name="path">
                Absolute or relative (to current directory) path to existing .md file, that you want
                to associate with the element being updated.
            </param>
            <returns>
                Identification number of updated element or <see langword="-1"/>, if update failed.
            </returns>
        </member>
        <member name="T:MdFilesMerger.App.Concrete.IgnoredFileService">
            <summary>
                Class handling collection of <see cref="T:MdFilesMerger.Domain.Entity.IgnoredFile"/> objects associated with the .md
                files ignored during merge, whose paths are stored as relative to connected main
                directory path.
                <para>
                    <b> Inheritance: </b><see cref="T:MdFilesMerger.App.Common.BaseService`1"/> -&gt; <see cref="T:MdFilesMerger.App.Common.BaseDirectoryService`1"/>
                    -&gt; <see cref="T:MdFilesMerger.App.Common.RelativeFileService`1"/> -&gt; IgnoredFileService <br/><b>
                    Implements: </b><see cref="T:MdFilesMerger.App.Abstract.ICRUDService`1"/>, <see
                                cref="T:MdFilesMerger.App.Abstract.IDirectoryService`1"/>, <see
                                cref="T:MdFilesMerger.App.Abstract.IRelativeFileService`1"/>, <see cref="T:MdFilesMerger.App.Abstract.IService`1"/>
                </para>
            </summary>
            <seealso cref="T:MdFilesMerger.App.Abstract.ICRUDService`1"> MdFilesMerger.App.Abstract.ICRUDService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IDirectoryService`1"> MdFilesMerger.App.Abstract.IDirectoryService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IRelativeFileService`1"> MdFilesMerger.App.Abstract.IRelativeFileService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IService`1"> MdFilesMerger.App.Abstract.IService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Common.BaseDirectoryService`1"> MdFilesMerger.App.Common.BaseDirectoryService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Common.BaseService`1"> MdFilesMerger.App.Common.BaseService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Common.RelativeFileService`1"> MdFilesMerger.App.Common.RelativeFileService&lt;T&gt; </seealso>
        </member>
        <member name="M:MdFilesMerger.App.Concrete.IgnoredFileService.#ctor(MdFilesMerger.App.Concrete.MainDirectoryService)">
            <summary>
                Initializes a new instance of the <see cref="T:MdFilesMerger.App.Concrete.IgnoredFileService"/> class.
            </summary>
            <param name="mainDirService"> The main directory service. </param>
        </member>
        <member name="M:MdFilesMerger.App.Concrete.IgnoredFileService.ToSelectedFile(System.Collections.Generic.List{MdFilesMerger.Domain.Entity.IgnoredFile},MdFilesMerger.App.Concrete.MainDirectoryService)">
            <summary>
                Converts <see cref="T:MdFilesMerger.Domain.Entity.IgnoredFile"/> objects to <see cref="T:MdFilesMerger.Domain.Entity.SelectedFile"/> objects.
            </summary>
            <param name="list"> The list of <see cref="T:MdFilesMerger.Domain.Entity.IgnoredFile"/> objects to convert. </param>
            <param name="mainDirectoryService"> The main directory service. </param>
            <returns> List of objects after conversion. </returns>
        </member>
        <member name="T:MdFilesMerger.App.Concrete.MainDirectoryService">
            <summary>
                Service handling private <see cref="T:System.Collections.Generic.List`1"/> list of <see cref="T:MdFilesMerger.Domain.Entity.MainDirectory"/>
                objects associated with existing directories, whose absolute paths they store and where
                .md files will be searched.
                <para>
                    <b> Inheritance: </b><see cref="T:MdFilesMerger.App.Common.BaseService`1"/> -&gt; <see
                    cref="T:MdFilesMerger.App.Common.BaseDirectoryService`1"/> -&gt; MainDirectoryService <br/><b> Implements:
                    </b><see cref="T:MdFilesMerger.App.Abstract.ICRUDService`1"/>, <see cref="T:MdFilesMerger.App.Abstract.IDirectoryService`1"/>, <see
                    cref="T:MdFilesMerger.App.Abstract.IMainDirectoryService"/>, <see cref="T:MdFilesMerger.App.Abstract.IService`1"/>
                </para>
            </summary>
            <seealso cref="T:MdFilesMerger.App.Abstract.ICRUDService`1"> MdFilesMerger.App.Abstract.ICRUDService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IDirectoryService`1"> MdFilesMerger.App.Abstract.IDirectoryService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IMainDirectoryService"> MdFilesMerger.App.Abstract.IMainDirectoryService </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IService`1"> MdFilesMerger.App.Abstract.IService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Common.BaseDirectoryService`1"> MdFilesMerger.App.Common.BaseDirectoryService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Common.BaseService`1"> MdFilesMerger.App.Common.BaseService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.Domain.Entity.MainDirectory"> MdFilesMerger.Domain.Entity.MainDirectory </seealso>
        </member>
        <member name="M:MdFilesMerger.App.Concrete.MainDirectoryService.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:MdFilesMerger.App.Concrete.MainDirectoryService"/> class.
            </summary>
            <remarks>
                If there is directory with default path ( <i>
                "pathToThisSolutionMainDirectory/../KursZostanProgramistaASPdotNET" </i>) on the
                disk, creates associated with it <see cref="T:MdFilesMerger.Domain.Entity.MainDirectory"/> object on the stored list.
            </remarks>
        </member>
        <member name="M:MdFilesMerger.App.Concrete.MainDirectoryService.FindAllFiles(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:MdFilesMerger.App.Concrete.MainDirectoryService.FindAllFiles(MdFilesMerger.Domain.Entity.MainDirectory)">
            <inheritdoc/>
        </member>
        <member name="M:MdFilesMerger.App.Concrete.MainDirectoryService.ReadByMergedFileId(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:MdFilesMerger.App.Concrete.MenuActionService">
            <summary>
                Class creating all <see cref="T:MdFilesMerger.Domain.Entity.MenuAction"/> objects and implementing methods to get them.
                <para>
                    <b> Inheritance: </b> MenuActionService <br/><b> Implements: </b><see
                    cref="T:MdFilesMerger.App.Abstract.IMenuActionService"/>, <see cref="T:MdFilesMerger.App.Abstract.IService`1"/>
                </para>
            </summary>
            <seealso cref="T:MdFilesMerger.App.Abstract.IMenuActionService"> MdFilesMerger.App.Abstract.IMenuActionService </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IService`1"> MdFilesMerger.App.Abstract.IService&lt;T&gt; </seealso>
        </member>
        <member name="M:MdFilesMerger.App.Concrete.MenuActionService.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:MdFilesMerger.App.Concrete.MenuActionService"/> class and fills
                <see cref="F:MdFilesMerger.App.Concrete.MenuActionService._actions"/> list.
            </summary>
        </member>
        <member name="M:MdFilesMerger.App.Concrete.MenuActionService.ReadById(System.Int32)">
            <summary>
                Gets the item from <see cref="F:MdFilesMerger.App.Concrete.MenuActionService._actions"/> by
                identification number ( <see cref="P:MdFilesMerger.Domain.Common.BaseItem.Id"/>).
            </summary>
            <param name="id"> The identification number of element that you are looking for. </param>
            <returns>
                <see cref="T:MdFilesMerger.Domain.Entity.MenuAction"/> object with <see cref="P:MdFilesMerger.Domain.Common.BaseItem.Id"/> equal <paramref
                name="id"/>, if there is one, otherwise <see langword="null"/>.
            </returns>
        </member>
        <member name="M:MdFilesMerger.App.Concrete.MenuActionService.ReadByMenuType(MdFilesMerger.Domain.Common.MenuType)">
            <inheritdoc/>
        </member>
        <member name="T:MdFilesMerger.App.Concrete.MergedFileService">
            <summary>
                Service handling list of <see cref="T:MdFilesMerger.Domain.Entity.MergedFile"/> objects associated with the .md files,
                that will be created as a result of merge, whose absolute paths are stored.
                <para>
                    <b> Inheritance: </b><see cref="T:MdFilesMerger.App.Common.BaseService`1"/> -&gt; <see cref="T:MdFilesMerger.App.Common.BaseDirectoryService`1"/>
                    -&gt; MergedFileService <br/><b>
                    Implements: </b><see cref="T:MdFilesMerger.App.Abstract.ICRUDService`1"/>, <see cref="T:MdFilesMerger.App.Abstract.IDirectoryService`1"/>,
                                <see cref="T:MdFilesMerger.App.Abstract.IEditFileService`1"/>, <see cref="T:MdFilesMerger.App.Abstract.IMergedFileService"/>,
                                <see cref="T:MdFilesMerger.App.Abstract.IService`1"/>
                </para>
            </summary>
            <seealso cref="T:MdFilesMerger.App.Abstract.ICRUDService`1"> MdFilesMerger.App.Abstract.ICRUDService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IDirectoryService`1"> MdFilesMerger.App.Abstract.IDirectoryService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IEditFileService`1"> MdFilesMerger.App.Abstract.IEditFileService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IMergedFileService"> MdFilesMerger.App.Abstract.IMergedFileService </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IService`1"> MdFilesMerger.App.Abstract.IService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Common.BaseDirectoryService`1"> MdFilesMerger.App.Common.BaseDirectoryService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Common.BaseService`1"> MdFilesMerger.App.Common.BaseService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.Domain.Entity.MergedFile"> MdFilesMerger.Domain.Concrete.MergedFile </seealso>
        </member>
        <member name="M:MdFilesMerger.App.Concrete.MergedFileService.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:MdFilesMerger.App.Concrete.MergedFileService"/> class and fills
                list with example data.
            </summary>
            <remarks>
                Creates <see cref="T:MdFilesMerger.Domain.Entity.MergedFile"/> object associated with
                [MyDocuments]/MergedFiles/README.md file.
            </remarks>
        </member>
        <member name="M:MdFilesMerger.App.Concrete.MergedFileService.CreateFile(MdFilesMerger.Domain.Entity.MergedFile,System.Collections.Generic.List{MdFilesMerger.Domain.Entity.SelectedFile})">
            <inheritdoc/>
        </member>
        <member name="M:MdFilesMerger.App.Concrete.MergedFileService.ReadByUserId(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:MdFilesMerger.App.Concrete.MergedFileService.UpdateFileName(System.Int32,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:MdFilesMerger.App.Concrete.MergedFileService.UpdateNewLineStyle(System.Int32,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:MdFilesMerger.App.Concrete.MergedFileService.UpdateParentDirectory(System.Int32,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:MdFilesMerger.App.Concrete.MergedFileService.UpdateTableOfContents(System.Int32,MdFilesMerger.Domain.Common.TableOfContents)">
            <inheritdoc/>
        </member>
        <member name="M:MdFilesMerger.App.Concrete.MergedFileService.UpdateTitle(System.Int32,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:MdFilesMerger.App.Concrete.MergedFileService.UpdateTOCHeader(System.Int32,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:MdFilesMerger.App.Concrete.SelectedFileService">
            <summary>
                Class handling list of <see cref="T:MdFilesMerger.Domain.Entity.SelectedFile"/> objects associated with the .md files
                used during merge, whose paths are stored as relative to connected main directory path.
                <para>
                    <b> Inheritance: </b><see cref="T:MdFilesMerger.App.Common.BaseService`1"/> -&gt; <see cref="T:MdFilesMerger.App.Common.BaseDirectoryService`1"/>
                    -&gt; <see cref="T:MdFilesMerger.App.Common.RelativeFileService`1"/> -&gt; SelectedFileService <br/><b>
                    Implements: </b><see cref="T:MdFilesMerger.App.Abstract.ICRUDService`1"/>, <see cref="T:MdFilesMerger.App.Abstract.IDirectoryService`1"/>,
                                <see cref="T:MdFilesMerger.App.Abstract.IEditFileService`1"/>, <see
                                cref="T:MdFilesMerger.App.Abstract.IRelativeFileService`1"/>, <see cref="T:MdFilesMerger.App.Abstract.ISelectedFileService"/>,
                                <see cref="T:MdFilesMerger.App.Abstract.IService`1"/>
                </para>
            </summary>
            <seealso cref="T:MdFilesMerger.App.Abstract.ICRUDService`1"> MdFilesMerger.App.Abstract.ICRUDService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IDirectoryService`1"> MdFilesMerger.App.Abstract.IDirectoryService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IEditFileService`1"> MdFilesMerger.App.Abstract.IEditFileService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IRelativeFileService`1"> MdFilesMerger.App.Abstract.IRelativeFileService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.ISelectedFileService"> MdFilesMerger.App.Abstract.ISelectedFileService </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IService`1"> MdFilesMerger.App.Abstract.IService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Common.BaseDirectoryService`1"> MdFilesMerger.App.Common.BaseDirectoryService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Common.BaseService`1"> MdFilesMerger.App.Common.BaseService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Common.RelativeFileService`1"> MdFilesMerger.App.Common.RelativeFileService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.Domain.Entity.SelectedFile"> MdFilesMerger.Domain.Entity.SelectedFile </seealso>
        </member>
        <member name="M:MdFilesMerger.App.Concrete.SelectedFileService.#ctor(MdFilesMerger.App.Concrete.MainDirectoryService)">
            <summary>
                Initializes a new instance of the <see cref="T:MdFilesMerger.App.Concrete.SelectedFileService"/> class.
            </summary>
            <param name="mainDirectoryService"> </param>
        </member>
        <member name="M:MdFilesMerger.App.Concrete.SelectedFileService.AppendFile(System.Int32,System.IO.FileInfo,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:MdFilesMerger.App.Concrete.SelectedFileService.AppendFile(MdFilesMerger.Domain.Entity.SelectedFile,System.IO.FileInfo,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:MdFilesMerger.App.Concrete.SelectedFileService.CreateRange(System.Collections.Generic.IEnumerable{System.IO.FileInfo},MdFilesMerger.Domain.Entity.MainDirectory)">
            <inheritdoc/>
        </member>
        <member name="M:MdFilesMerger.App.Concrete.SelectedFileService.UpdateTitle(System.Int32,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:MdFilesMerger.App.Concrete.TableOfContentsService">
            <summary>
                Static class with method to create table of contents for specified merged file.
            </summary>
        </member>
        <member name="M:MdFilesMerger.App.Concrete.TableOfContentsService.CreateTOC(MdFilesMerger.Domain.Entity.MergedFile,System.Collections.Generic.List{MdFilesMerger.Domain.Entity.SelectedFile})">
            <summary>
                Creates the table of contents of specified type.
            </summary>
            <param name="mergedFile"> The merged file for which table of content will be created. </param>
            <param name="selectedFiles">
                The list of all files, whose content will be placed in the merged file.
            </param>
            <returns> Text of whole table of contents. </returns>
        </member>
        <member name="T:MdFilesMerger.App.Concrete.UserService">
            <summary>
                A class that handles a list of User objects.
                <para>
                    <b> Inheritance: </b><see cref="T:MdFilesMerger.App.Common.BaseService`1"/> -&gt; UserService <br/><b>
                    Implements: </b><see cref="T:MdFilesMerger.App.Abstract.ICRUDService`1"/>, <see cref="T:MdFilesMerger.App.Abstract.IService`1"/>, <see cref="T:MdFilesMerger.App.Abstract.IUserService"/>
                </para>
            </summary>
            <seealso cref="T:MdFilesMerger.App.Abstract.ICRUDService`1"> MdFilesMerger.App.Abstract.ICRUDService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IService`1"> MdFilesMerger.App.Abstract.IService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.App.Abstract.IUserService"> MdFilesMerger.App.Abstract.IUserService </seealso>
            <seealso cref="T:MdFilesMerger.App.Common.BaseService`1"> MdFilesMerger.App.Common.BaseService&lt;T&gt; </seealso>
            <seealso cref="T:MdFilesMerger.Domain.Entity.User"> MdFilesMerger.Domain.Entity.User </seealso>
        </member>
        <member name="M:MdFilesMerger.App.Concrete.UserService.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:MdFilesMerger.App.Concrete.UserService"/> class.
            </summary>
        </member>
        <member name="M:MdFilesMerger.App.Concrete.UserService.CheckCredentials(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:MdFilesMerger.App.Concrete.UserService.ReadByName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:MdFilesMerger.App.Concrete.UserService.UpdateName(System.Int32,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:MdFilesMerger.App.Concrete.UserService.UpdatePassword(System.Int32,System.String)">
            <inheritdoc/>
        </member>
    </members>
</doc>
